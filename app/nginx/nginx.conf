
user  nginx;
worker_processes  auto;
worker_cpu_affinity auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
   use epoll;
   worker_connections 51200;
   multi_accept off;
   accept_mutex off;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    server_names_hash_bucket_size 128;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;
    client_max_body_size 50m;

    sendfile on;
    sendfile_max_chunk 512k;
    tcp_nopush on;

    keepalive_timeout  65;

    server_tokens off;
    access_log off;    # /var/log/nginx/access.log  main;
	absolute_redirect off;

    #启用压缩
    #brotli on;
    #压缩等级1-9
    #brotli_comp_level 6;
    #设置用于压缩响应的缓冲区number和size
    #brotli_buffers 16 8k;
    #设置length要压缩的响应的最小值
    #brotli_min_length 20;
    #压缩的文件类型
    #brotli_types text/xml text/plain text/css application/javascript application/x-javascript application/rss+xml text/javascript image/tiff image/svg+xml application/json application/xml;

    gzip on;
    gzip_min_length  1k;
    gzip_buffers     4 16k;
    gzip_http_version 1.1;
    gzip_comp_level 2;
    gzip_types text/plain text/css application/javascript application/x-javascript text/javascript application/xml application/xml+rss application/json text/xml image/tiff image/svg+xml;
    gzip_vary on;
    gzip_proxied   expired no-cache no-store private auth;
    gzip_disable   "MSIE [1-6]\.";

    # dhparam使用以下命令生成：
    # openssl dhparam -out /path/ssl/dhparam.pem 2048
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    
    server {
        listen       80;
        listen  [::]:80;
        server_name  _;

        access_log /var/log/nginx/access.log main;

        root  /www/default;
        index  index.html index.htm index.php;

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   /usr/share/nginx/html;
        #}

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        
        include conf/enable-php.conf;
        
        location ~ .*\.(jpg|jpeg|png|apng|webp|avif|gif|bmp|raw|zip|rar|gz|tgz|tar|psd|pcd|swf)$ {
            expires      14d;
        }

        location ~ .*\.(js|css|svg|pdf)?$ {
            expires      12h;
        }

        location ~ /.well-known {
            allow all;
        }

        location ~ /\. {
            deny all;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    include /etc/nginx/vhost/*.conf;
}
